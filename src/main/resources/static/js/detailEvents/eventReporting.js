// ====== EVENT REPORTING FUNCTIONALITY ======
// –§–∞–π–ª: src/main/resources/static/js/mainEvent/eventReporting.js

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞ –¥–æ–∫–ª–∞–¥–≤–∞–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏—è
 * @param {string} eventType - –¢–∏–ø –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ (SIMPLE_EVENT, REFERENDUM, MULTI_POLL)
 * @param {number} eventId - ID –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ
 */
function showEventReportModal(eventType, eventId) {
    if (!eventType || !eventId) {
        console.error('Invalid parameters for showEventReportModal:', { eventType, eventId });
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∞–≤—Ç–µ–Ω—Ç–∏–∫–∞—Ü–∏—è
    if (!window.isAuthenticated) {
        if (typeof window.showLoginWarning === 'function') {
            window.showLoginWarning();
        } else {
            alert('–ó–∞ –¥–∞ –¥–æ–∫–ª–∞–¥–≤–∞—Ç–µ —Å—ä–±–∏—Ç–∏–µ, –º–æ–ª—è –≤–ª–µ–∑—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞!');
        }
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ SweetAlert2
    if (typeof Swal === 'undefined') {
        console.error('SweetAlert2 –Ω–µ –µ –¥–æ—Å—Ç—ä–ø–µ–Ω');
        alert('–í—ä–∑–Ω–∏–∫–Ω–∞ –ø—Ä–æ–±–ª–µ–º —Å—ä—Å —Å–∏—Å—Ç–µ–º–∞—Ç–∞. –ú–æ–ª—è –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.');
        return;
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–Ω–µ –Ω–∞ —Ç–µ–∫—Å—Ç–∞ —Å–ø–æ—Ä–µ–¥ —Ç–∏–ø–∞ —Å—ä–±–∏—Ç–∏–µ
    const eventTypeText = getEventTypeText(eventType);

    Swal.fire({
        title: `–î–æ–∫–ª–∞–¥–≤–∞–π ${eventTypeText}`,
        html: `
            <div style="text-align: left; margin-bottom: 20px;">
                <p style="margin-bottom: 15px; color: #666; font-size: 14px;">–ó–∞—â–æ –¥–æ–∫–ª–∞–¥–≤–∞—Ç–µ —Ç–æ–≤–∞ ${eventTypeText.toLowerCase()}?</p>
                <select id="reportReason" class="swal2-select" style="width: 85%; padding: 12px; border: 1px solid #ddd; border-radius: 8px; font-size: 14px;">
                    <option value="SPAM">üö´ –°–ø–∞–º –∏–ª–∏ –Ω–µ–∂–µ–ª–∞–Ω–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ</option>
                    <option value="HARASSMENT">‚ö†Ô∏è –¢–æ—Ä–º–æ–∑ –∏–ª–∏ –∑–∞–ø–ª–∞—Ö–∏</option>
                    <option value="HATE_SPEECH">üò° –ï–∑–∏–∫ –Ω–∞ –æ–º—Ä–∞–∑–∞—Ç–∞</option>
                    <option value="MISINFORMATION">‚ùå –î–µ–∑–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–ª–∏ —Ñ–∞–ª—à–∏–≤–∏ –Ω–æ–≤–∏–Ω–∏</option>
                    <option value="INAPPROPRIATE">üîû –ù–µ–ø–æ–¥—Ö–æ–¥—è—â–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ</option>
                    <option value="COPYRIGHT">üìù –ù–∞—Ä—É—à–µ–Ω–∏–µ –Ω–∞ –∞–≤—Ç–æ—Ä—Å–∫–∏ –ø—Ä–∞–≤–∞</option>
                    <option value="OTHER">‚ùì –î—Ä—É–≥–æ</option>
                </select>
                
                <!-- –ü–æ–ª–µ –∑–∞ –æ–ø–∏—Å–∞–Ω–∏–µ - –ø–æ–∫–∞–∑–≤–∞ —Å–µ —Å–∞–º–æ –ø—Ä–∏ "–î—Ä—É–≥–æ" -->
                <div id="descriptionContainer" style="margin-top: 15px; display: none;">
                    <label for="reportDescription" style="display: block; margin-bottom: 8px; font-weight: 500; color: #333;">
                        –û–ø–∏—à–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º–∞:
                    </label>
                    <textarea 
                        id="reportDescription" 
                        placeholder="–ú–æ–ª—è, –æ–ø–∏—à–µ—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ –∑–∞—â–æ –¥–æ–∫–ª–∞–¥–≤–∞—Ç–µ —Ç–æ–≤–∞ ${eventTypeText.toLowerCase()}..."
                        style="width: 85%; min-height: 80px; padding: 10px; border: 1px solid #ddd; border-radius: 6px; font-size: 14px; resize: vertical; font-family: inherit;"
                        maxlength="500"
                    ></textarea>
                    <div style="text-align: right; font-size: 12px; color: #999; margin-top: 5px;">
                        <span id="charCounter">0/500 –∑–Ω–∞–∫–∞</span>
                    </div>
                </div>
                
                <p style="margin-top: 15px; font-size: 12px; color: #999;">
                    –í–∞—à–∏—è—Ç –¥–æ–∫–ª–∞–¥ —â–µ –±—ä–¥–µ –ø—Ä–µ–≥–ª–µ–¥–∞–Ω –æ—Ç –Ω–∞—à–∏—è –µ–∫–∏–ø –≤ —Ä–∞–º–∫–∏—Ç–µ –Ω–∞ 24 —á–∞—Å–∞.
                </p>
            </div>
        `,
        showCancelButton: true,
        confirmButtonText: '<i class="bi bi-flag-fill"></i> –ò–∑–ø—Ä–∞—Ç–∏ –¥–æ–∫–ª–∞–¥',
        cancelButtonText: '<i class="bi bi-x"></i> –û—Ç–∫–∞–∑',
        confirmButtonColor: '#e74c3c',
        cancelButtonColor: '#6c757d',
        buttonsStyling: true,
        customClass: {
            popup: 'animated fadeInDown',
            confirmButton: 'btn btn-danger',
            cancelButton: 'btn btn-secondary'
        },
        didOpen: () => {
            // –ù–∞—Å—Ç—Ä–æ–π–≤–∞–Ω–µ –Ω–∞ event listeners –∑–∞ –¥–∏–Ω–∞–º–∏—á–Ω–æ—Ç–æ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –æ–ø–∏—Å–∞–Ω–∏–µ—Ç–æ
            const reasonSelect = document.getElementById('reportReason');
            const descriptionContainer = document.getElementById('descriptionContainer');
            const reportDescription = document.getElementById('reportDescription');
            const charCounter = document.getElementById('charCounter');

            if (reasonSelect && descriptionContainer) {
                reasonSelect.addEventListener('change', () => {
                    if (reasonSelect.value === 'OTHER') {
                        descriptionContainer.style.display = 'block';
                        reportDescription.focus();
                    } else {
                        descriptionContainer.style.display = 'none';
                    }
                });
            }

            // Character counter –∑–∞ –æ–ø–∏—Å–∞–Ω–∏–µ—Ç–æ
            if (reportDescription && charCounter) {
                reportDescription.addEventListener('input', () => {
                    const length = reportDescription.value.length;
                    charCounter.textContent = `${length}/500 –∑–Ω–∞–∫–∞`;

                    if (length > 450) {
                        charCounter.style.color = '#e74c3c';
                    } else if (length > 400) {
                        charCounter.style.color = '#f39c12';
                    } else {
                        charCounter.style.color = '#999';
                    }
                });
            }
        },
        preConfirm: () => {
            const reason = document.getElementById('reportReason').value;
            const description = document.getElementById('reportDescription').value.trim();

            if (!reason) {
                Swal.showValidationMessage('<i class="bi bi-exclamation-triangle"></i> –ú–æ–ª—è, –∏–∑–±–µ—Ä–µ—Ç–µ –ø—Ä–∏—á–∏–Ω–∞ –∑–∞ –¥–æ–∫–ª–∞–¥–≤–∞–Ω–µ—Ç–æ!');
                return false;
            }

            // –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞ –æ–ø–∏—Å–∞–Ω–∏–µ—Ç–æ –ø—Ä–∏ –∏–∑–±–æ—Ä "–î—Ä—É–≥–æ"
            if (reason === 'OTHER' && !description) {
                Swal.showValidationMessage('<i class="bi bi-exclamation-triangle"></i> –ú–æ–ª—è, –æ–ø–∏—à–µ—Ç–µ –ø—Ä–∏—á–∏–Ω–∞—Ç–∞ –∑–∞ –¥–æ–∫–ª–∞–¥–≤–∞–Ω–µ—Ç–æ!');
                return false;
            }

            // –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞ –¥—ä–ª–∂–∏–Ω–∞ –Ω–∞ –æ–ø–∏—Å–∞–Ω–∏–µ—Ç–æ
            if (description && description.length < 10) {
                Swal.showValidationMessage('<i class="bi bi-exclamation-triangle"></i> –û–ø–∏—Å–∞–Ω–∏–µ—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ –ø–æ–Ω–µ 10 –∑–Ω–∞–∫–∞!');
                return false;
            }

            if (description && description.length > 500) {
                Swal.showValidationMessage('<i class="bi bi-exclamation-triangle"></i> –û–ø–∏—Å–∞–Ω–∏–µ—Ç–æ –Ω–µ –º–æ–∂–µ –¥–∞ –±—ä–¥–µ –ø–æ–≤–µ—á–µ –æ—Ç 500 –∑–Ω–∞–∫–∞!');
                return false;
            }

            return { reason, description };
        }
    }).then(async (result) => {
        if (result.isConfirmed) {
            await submitEventReport(eventType, eventId, result.value.reason, result.value.description);
        }
    });
}

/**
 * –ò–∑–ø—Ä–∞—â–∞ –¥–æ–∫–ª–∞–¥–∞ –∫—ä–º —Å—ä—Ä–≤—ä—Ä–∞
 */
async function submitEventReport(eventType, eventId, reason, description) {
    try {
        // –ü–æ–∫–∞–∑–≤–∞–º–µ loading —Å—ä—Å—Ç–æ—è–Ω–∏–µ
        Swal.fire({
            title: '–ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –¥–æ–∫–ª–∞–¥...',
            html: '–ú–æ–ª—è –∏–∑—á–∞–∫–∞–π—Ç–µ, –¥–æ–∫–∞—Ç–æ –æ–±—Ä–∞–±–æ—Ç–≤–∞–º–µ –≤–∞—à–∏—è –¥–æ–∫–ª–∞–¥.',
            allowOutsideClick: false,
            allowEscapeKey: false,
            showConfirmButton: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });

        // –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ CSRF —Ç–æ–∫–µ–Ω
        const csrfToken = document.querySelector('meta[name="_csrf"]')?.getAttribute('content');
        const csrfHeader = document.querySelector('meta[name="_csrf_header"]')?.getAttribute('content');

        const headers = {
            'Content-Type': 'application/json'
        };

        if (csrfToken && csrfHeader) {
            headers[csrfHeader] = csrfToken;
        }

        // –ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞
        const response = await fetch(`/api/reports/${eventType}/${eventId}`, {
            method: 'POST',
            headers: headers,
            body: JSON.stringify({
                reason: reason,
                description: description || ''
            })
        });

        const data = await response.json();

        if (response.ok && data.success) {
            // –£—Å–ø–µ—à–Ω–æ –∏–∑–ø—Ä–∞—Ç–µ–Ω –¥–æ–∫–ª–∞–¥
            Swal.fire({
                icon: 'success',
                title: '–î–æ–∫–ª–∞–¥—ä—Ç –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω —É—Å–ø–µ—à–Ω–æ!',
                text: '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∏! –ù–∞—à–∏—è—Ç –µ–∫–∏–ø —â–µ –ø—Ä–µ–≥–ª–µ–¥–∞ –¥–æ–∫–ª–∞–¥–∞ –≤ –Ω–∞–π-—Å–∫–æ—Ä–æ –≤—Ä–µ–º–µ.',
                confirmButtonColor: '#28a745',
                confirmButtonText: '–†–∞–∑–±—Ä–∞–Ω–æ'
            });
        } else {
            // –ì—Ä–µ—à–∫–∞ –æ—Ç —Å—ä—Ä–≤—ä—Ä–∞
            handleReportError(response.status, data.message || '–í—ä–∑–Ω–∏–∫–Ω–∞ –Ω–µ–æ—á–∞–∫–≤–∞–Ω–∞ –≥—Ä–µ—à–∫–∞');
        }

    } catch (error) {
        console.error('Error submitting event report:', error);
        Swal.fire({
            icon: 'error',
            title: '–ü—Ä–æ–±–ª–µ–º —Å –≤—Ä—ä–∑–∫–∞—Ç–∞',
            text: '–í—ä–∑–Ω–∏–∫–Ω–∞ –ø—Ä–æ–±–ª–µ–º —Å –≤—Ä—ä–∑–∫–∞—Ç–∞. –ú–æ–ª—è –ø—Ä–æ–≤–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å–∏ –∏ –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.',
            confirmButtonColor: '#e74c3c',
            confirmButtonText: '–û–ø–∏—Ç–∞–π –æ—Ç–Ω–æ–≤–æ'
        });
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –≥—Ä–µ—à–∫–∏ –ø—Ä–∏ –¥–æ–∫–ª–∞–¥–≤–∞–Ω–µ
 */
function handleReportError(status, message) {
    let title, text, icon;

    switch (status) {
        case 400:
            title = '–ù–µ–≤–∞–ª–∏–¥–Ω–∏ –¥–∞–Ω–Ω–∏';
            text = message || '–ú–æ–ª—è –ø—Ä–æ–≤–µ—Ä–µ—Ç–µ –≤—ä–≤–µ–¥–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏ –∏ –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.';
            icon = 'warning';
            break;
        case 401:
            title = '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–µ–Ω—Ç–∏–∫–∞—Ü–∏—è';
            text = '–ú–æ–ª—è –≤–ª–µ–∑—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞ –∏ –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.';
            icon = 'warning';
            break;
        case 403:
            title = '–ù—èmate —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ';
            text = message || '–ù–µ –º–æ–∂–µ—Ç–µ –¥–∞ –¥–æ–∫–ª–∞–¥–≤–∞—Ç–µ —Ç–æ–≤–∞ —Å—ä–±–∏—Ç–∏–µ.';
            icon = 'error';
            break;
        case 409:
            title = '–î–æ–∫–ª–∞–¥—ä—Ç –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞';
            text = '–í–µ—á–µ —Å—Ç–µ –¥–æ–∫–ª–∞–¥–≤–∞–ª–∏ —Ç–æ–≤–∞ —Å—ä–±–∏—Ç–∏–µ.';
            icon = 'info';
            break;
        case 429:
            title = '–¢–≤—ä—Ä–¥–µ –º–Ω–æ–≥–æ –¥–æ–∫–ª–∞–¥–∏';
            text = message || '–ü—Ä–µ–≤–∏—à–∏–ª–∏ —Å—Ç–µ –ª–∏–º–∏—Ç–∞ –∑–∞ –¥–æ–∫–ª–∞–¥–∏. –ú–æ–ª—è –æ–ø–∏—Ç–∞–π—Ç–µ –ø–æ-–∫—ä—Å–Ω–æ.';
            icon = 'warning';
            break;
        default:
            title = '–ì—Ä–µ—à–∫–∞ –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞';
            text = message || '–í—ä–∑–Ω–∏–∫–Ω–∞ –ø—Ä–æ–±–ª–µ–º —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞. –ú–æ–ª—è –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.';
            icon = 'error';
    }

    Swal.fire({
        icon: icon,
        title: title,
        text: text,
        confirmButtonColor: '#e74c3c',
        confirmButtonText: '–û–ø–∏—Ç–∞–π –æ—Ç–Ω–æ–≤–æ'
    });
}

/**
 * –ü–æ–º–æ—â–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞ –æ–ø—Ä–µ–¥–µ–ª—è–Ω–µ –Ω–∞ —Ç–µ–∫—Å—Ç–∞ —Å–ø–æ—Ä–µ–¥ —Ç–∏–ø–∞ —Å—ä–±–∏—Ç–∏–µ
 */
function getEventTypeText(eventType) {
    switch (eventType.toUpperCase()) {
        case 'SIMPLE_EVENT':
            return '—Å—ä–±–∏—Ç–∏–µ';
        case 'REFERENDUM':
            return '—Ä–µ—Ñ–µ—Ä–µ–Ω–¥—É–º';
        case 'MULTI_POLL':
            return '–∞–Ω–∫–µ—Ç–∞';
        default:
            return '—Å—ä–±–∏—Ç–∏–µ';
    }
}

// ====== –ì–õ–û–ë–ê–õ–ù–ò –§–£–ù–ö–¶–ò–ò –ó–ê BACKWARD COMPATIBILITY ======

/**
 * –°–ø–µ—Ü–∏—Ñ–∏—á–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞ –≤—Å–µ–∫–∏ —Ç–∏–ø —Å—ä–±–∏—Ç–∏–µ (–∑–∞ –∏–∑–ø–æ–ª–∑–≤–∞–Ω–µ –≤ HTML onclick)
 */
window.reportEvent = function(eventId) {
    showEventReportModal('SIMPLE_EVENT', eventId);
};

window.reportReferendum = function(eventId) {
    showEventReportModal('REFERENDUM', eventId);
};

window.reportPoll = function(eventId) {
    showEventReportModal('MULTI_POLL', eventId);
};

// –û—Å–Ω–æ–≤–Ω–∞—Ç–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è
window.showEventReportModal = showEventReportModal;

// ====== INITIALIZATION ======
document.addEventListener('DOMContentLoaded', function() {
    console.log('‚úÖ Event Reporting functionality loaded successfully');
});

console.log('‚úÖ eventReporting.js loaded successfully');